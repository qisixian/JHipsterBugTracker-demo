apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file ../docker/app.yml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: jhipsterbugtrackerdemo-app
  name: jhipsterbugtrackerdemo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: jhipsterbugtrackerdemo-app
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file ../docker/app.yml convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: jhipsterbugtrackerdemo-app
    spec:
      containers:
      - env:
        - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
          value: http://admin:${jhipster.registry.password}@3.112.132.112:8761/eureka
        - name: JHIPSTER_SLEEP
          value: "30"
        - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
          value: "true"
        - name: SPRING_CLOUD_CONFIG_URI
          value: http://admin:${jhipster.registry.password}@3.112.132.112:8761/config
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://rds-postgresql-1.cak7lovvs5rs.ap-northeast-1.rds.amazonaws.com:5432/jhipsterbugtrackerdemo
        - name: SPRING_LIQUIBASE_URL
          value: jdbc:postgresql://rds-postgresql-1.cak7lovvs5rs.ap-northeast-1.rds.amazonaws.com:5432/jhipsterbugtrackerdemo
        - name: SPRING_PROFILES_ACTIVE
          value: prod,api-docs
        - name: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI
          value: http://3.112.132.112:9080/auth/realms/jhipster
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID
          value: web_app
        - name: SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET
          value: web_app
        - name: _JAVA_OPTIONS
          value: -Xmx512m -Xms256m
        image: sishian/jhipsterbugtrackerdemo:0.1.4-dev
        imagePullPolicy: ""
        name: jhipsterbugtrackerdemo-app
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
